# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    tags:
       - '*'
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'

env:
  GITHUB_REF: ${{ github.ref }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-frontend:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Get the version
        id: get_version
        #run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/*/}

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          echo $GITHUB_REF
          if [[ $GITHUB_REF == *"refs/tags/release-"* ]]; then
            echo Push and deploy to live environment
          fi
          echo build-frontend
          echo test
  build-backend:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Get the version
        id: get_version
        #run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/*/}

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo build-backend
  deploy-backend:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: build-backend

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Get the version
        id: get_version
        #run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/*/}

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo deploy-backend
  
